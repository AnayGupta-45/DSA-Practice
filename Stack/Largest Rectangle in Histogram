class Solution {
    public int largestRectangleArea(int[] arr) {
        int n = arr.length;
        int [] ans1 = new int[n];
        int [] ans2 = new int[n];
        int area = 0;
        Stack<Integer> Anay = new Stack<>();
        for(int i = 0; i < n; i++){
            while(!Anay.isEmpty() && arr[Anay.peek()] >= arr[i])
            {
                Anay.pop();
            }
            if(Anay.isEmpty()){
                ans1[i] = -1;
            }
            else{
                ans1[i] = Anay.peek();
            }
            Anay.push(i);
        }
        Anay.clear();
        for(int i = n-1; i>=0; i--){
            while(!Anay.isEmpty() && arr[Anay.peek()] >= arr[i])
            {
                Anay.pop();
            }
            if(Anay.isEmpty()){
                ans2[i] = n;
            }
            else{
                ans2[i] = Anay.peek();
            }
            Anay.push(i);
    }
    for(int i = 0; i < n; i++){
     int width = (ans2[i] - ans1[i]-1);
      area = Math.max(area, width*arr[i]);
    }
    return area;
}
}
